{"version":3,"sources":["assets/images/logo.svg","actions/login.js","reducers/login.js","reducers/index.js","store.js","components/LoginForm/index.js","components/Home/presenter.js","components/Home/index.js","components/atoms/buttons.js","components/About/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","IS_LOGGED","initialStateLogin","isLogged","LoginReducer","state","arguments","length","undefined","action","type","Object","objectSpread","payload","console","log","appReducer","combineReducers","loginReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","classNames","require","LoginForm","_Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isSignupFormShown","isLoginFormShown","signupExit","loginExit","inherits","createClass","key","value","setState","_this2","loginFormClasses","slide-up","login","signupFormClasses","signup","loginExitClasses","d-none","signupExitClasses","react_default","a","createElement","className","src","onClick","handleLoginClick","id","handleSignupClick","handleLoginExit","index_es","icon","faTimes","size","placeholder","handleSignupExit","Component","Home","apply","getLoginInfo","LoginForm_LoginForm","connect","reducer","dispatch","Button","_ref","_ref$className","_ref$label","label","_ref$type","rest","objectWithoutProperties","assign","About","history","push","react","buttons_Button","style","margin","goToHome","App","Switch","Route","exact","path","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","es","BrowserRouter","basename","process","App_App","document","getElementById","URL","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.13b45ee8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const IS_LOGGED = \"IS_LOGGED\";\n\nexport function getLoginInfo() {\n  return {\n    type: IS_LOGGED,\n    payload: {\n      isLogged: true\n    }\n  };\n}\n","import { IS_LOGGED } from \"../actions\";\n\nconst initialStateLogin = {\n  isLogged: false\n};\n\nconst LoginReducer = (state = initialStateLogin, action) => {\n  switch (action.type) {\n    case IS_LOGGED:\n      return {\n        ...state,\n        isLogged: action.payload.isLogged\n      };\n    default:\n      console.log(state);\n      return state;\n  }\n};\n\nexport default LoginReducer;\n","import { combineReducers } from \"redux\";\n\nimport loginReducer from \"./login\";\n\nconst appReducer = combineReducers({\n  loginReducer\n});\n\nexport default appReducer;\n","import { createStore } from \"redux\";\nimport appReducer from \"./reducers\";\n\nexport const store = createStore(\n  appReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","// @flow\nimport React, { Component } from \"react\";\n\nimport \"../../css/Home.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nlet classNames = require(\"classnames\");\n\nexport class LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSignupFormShown: false,\n      isLoginFormShown: false,\n      signupExit: true,\n      loginExit: true,\n    };\n  }\n\n  componentDidMount() {\n    //State already filled.\n    console.log(this.state);\n  }\n\n  handleLoginClick() {\n    if (!this.state.isLoginFormShown) {\n      this.setState((state, props) => ({\n        isLoginFormShown: true,\n        loginExit: false,\n      }));\n    } else {\n      this.setState((state, props) => ({\n        isLoginFormShown: false,\n        loginExit: true,\n      }));\n    }\n  }\n\n  handleSignupClick() {\n    if (!this.state.isSignupFormShown) {\n        // Form up to be showed.\n      this.setState((state, props) => ({\n        isSignupFormShown: true,\n        signupExit: false,\n      }));\n    } else {\n        // Form down.\n      this.setState((state, props) => ({\n        isSignupFormShown: false,\n        signupExit: true,\n      }));\n    }\n  }\n\n  handleLoginExit() {\n    if (this.state.isLoginFormShown) {\n      this.setState((state, props) => ({\n        isLoginFormShown: false,\n        loginExit: true,\n      }));\n    }\n  }\n\n  handleSignupExit() {\n    if (this.state.isSignupFormShown) {\n      this.setState((state, props) => ({\n        isSignupFormShown: false,\n        signupExit: true,\n      }));\n    }\n  }\n\n  render() {\n    let loginFormClasses = classNames({\n      \"slide-up\": !this.state.isLoginFormShown,\n      login: true,\n    });\n\n    let signupFormClasses = classNames({\n      \"slide-up\": !this.state.isSignupFormShown,\n      signup: true,\n    });\n\n    let loginExitClasses = classNames({\n      \"d-none\": this.state.loginExit,\n    });\n\n    let signupExitClasses = classNames({\n      \"d-none\": this.state.signupExit, \n    });\n\n    return (\n      <div className=\"form-structor\">\n        <div className=\"info__login\">\n          <img\n            className=\"image__logo\"\n            src=\"https://i.pinimg.com/originals/bf/57/89/bf5789aba519ae9091dd75825dff18cc.png\"\n          />\n\n          <div className=\"buttons\">\n            <button\n              onClick={() => {\n                this.handleLoginClick();\n              }}\n              className=\"btn-initial\"\n              id=\"login\"\n            >\n              Login\n            </button>\n            <button\n              onClick={() => {\n                this.handleSignupClick();\n              }}\n              className=\"btn-initial\"\n              id=\"signup\"\n            >\n              Signup\n            </button>\n          </div>\n\n          <div className=\"socials\">\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a5/Instagram_icon.png/600px-Instagram_icon.png\" />\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a5/Instagram_icon.png/600px-Instagram_icon.png\" />\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a5/Instagram_icon.png/600px-Instagram_icon.png\" />\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a5/Instagram_icon.png/600px-Instagram_icon.png\" />\n          </div>\n        </div>\n        <div className={loginFormClasses} id=\"login-panel\">\n          <div\n            className=\"login-exit-button\"\n            onClick={() => {\n              this.handleLoginExit();\n            }}\n          >\n            <FontAwesomeIcon\n              icon={faTimes}\n              className={loginExitClasses}\n              size=\"lg\"\n            />\n          </div>\n\n          <div className=\"center\">\n            <div className=\"form-holder\">\n              <input type=\"email\" className=\"input\" placeholder=\"Email\" />\n              <input type=\"password\" className=\"input\" placeholder=\"Password\" />\n            </div>\n            <button className=\"submit-btn\">Log in</button>\n          </div>\n        </div>\n        <div className={signupFormClasses} id=\"signup-panel\">\n          <div\n            className=\"signup-exit-button\"\n            onClick={() => {\n              this.handleSignupExit();\n            }}\n          >\n            <FontAwesomeIcon\n              icon={faTimes}\n              className={signupExitClasses}\n              size=\"lg\"\n            />\n          </div>\n          <div className=\"center\">\n            <div className=\"form-holder\">\n              <input\n                type=\"email\"\n                className=\"input\"\n                placeholder=\"Email-Signup\"\n              />\n              <input\n                type=\"password\"\n                className=\"input\"\n                placeholder=\"Password-Signup\"\n              />\n            </div>\n            <button className=\"submit-btn\">Log in</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","// @flow\nimport React, { Component } from \"react\";\nimport logo from \"../../assets/images/logo.svg\";\nimport { Link } from \"react-router-dom\";\nimport {LoginForm} from \"../LoginForm/index.js\";\n\nimport \"../../css/Home.scss\";\n\ntype Props = {\n  getLoginInfo: Function,\n  isLogged: Boolean\n};\n\n\n\nexport class Home extends Component<Props> {\n\n  componentDidMount() {\n    this.props.getLoginInfo();\n    console.log(\"ISLOGGED\", this.props);\n  }\n\n  render() {\n    /* Wrap Login Page with isLogged State */\n    return (\n      <div className=\"main\">\n          <LoginForm></LoginForm>\n      </div>\n    );\n  }\n}\n","// @flow\nimport { connect } from \"react-redux\";\nimport { Home } from \"./presenter\";\nimport { getLoginInfo } from \"../../actions\";\n\nconst mapStateToProps = (reducer) => {\n  return {\n    isLogged: reducer.loginReducer.isLogged\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getLoginInfo: () => dispatch(getLoginInfo())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home);\n","import React from \"react\";\n\nexport const Button = ({\n  className = null,\n  label = \"This is a button\",\n  type = \"button\",\n  ...rest\n}) => {\n  return (\n    <button className={\"btn \" + className} type={type} {...rest}>\n      {label}\n    </button>\n  );\n};\n","// @flow\n\nimport React, { Component, Fragment } from \"react\";\nimport { Button } from \"../atoms/buttons\";\nimport type { RouterHistory } from \"react-router\";\n\ntype Props = {\n  history: RouterHistory\n};\n\nexport default class About extends Component<Props> {\n  goToHome() {\n    // Here we use \"history\" wich provides several implementations for managing session history in JS\n    // push(path, [state]) - (function) Pushes a new entry onto the history stack\n    this.props.history.push(\"/\");\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <h1>About Page</h1>\n        <Button\n          style={{ margin: \"auto\" }}\n          label=\"Go back to home\"\n          className=\"btn-info\"\n          onClick={() => {\n            this.goToHome();\n          }}\n        />\n      </Fragment>\n    );\n  }\n}\n","// @flow\n\nimport React, { Component } from \"react\";\nimport { Switch, Route } from \"react-router\";\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\nimport \"./css/App.scss\";\nimport \"./css/buttons.css\";\n\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/about\" component={About} />\n          <Route component={() => <div>404 Not found </div>} />\n        </Switch>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    console.log(process.env, navigator,config);\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}